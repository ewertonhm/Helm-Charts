apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }} 
  labels:
    app: {{ .Values.appName }} 
    deploymentconfig: {{ .Values.appName }} 
    kube_app: {{ .Values.appName }} 
    kube_deployment: {{ .Values.appName }} 
    kube_namespace: {{ .Values.namespace }}
    tags.datadoghq.com/env: {{ .Values.environment }}
    tags.datadoghq.com/service: {{ .Values.appName }}
    tags.datadoghq.com/version: {{ .Values.image.tag }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.appName }} 
      deploymentconfig: {{ .Values.appName }} 
      kube_app: {{ .Values.appName }} 
      kube_deployment: {{ .Values.appName }} 
      kube_namespace: {{ .Values.namespace }}
  template:
    metadata:
      annotations:        
        "ad.datadoghq.com/{{ .Values.appName }}.logs" : '[{"source":"golang", "service":"{{ .Values.appName }}"}]'
        "com.datadoghq.ad.logs" : '[{"service": "{{ .Values.appName }}"}]'
      labels:
        app: {{ .Values.appName }} 
        deploymentconfig: {{ .Values.appName }} 
        kube_app: {{ .Values.appName }} 
        kube_deployment: {{ .Values.appName }} 
        kube_namespace: {{ .Values.namespace }}
        tags.datadoghq.com/env: {{ .Values.environment }}
        tags.datadoghq.com/service: {{ .Values.appName }}
        tags.datadoghq.com/version: {{ .Values.image.tag }}
    spec:    
      imagePullSecrets:
        - name: {{ .Values.image.imagePullSecret }}
      volumes:
      - hostPath:
          path: /var/run/datadog/
        name: apmsocketpath
      - name: {{ .Values.Mount.sistemasHavan.MountName }}
        secret:
          defaultMode: 420
          secretName: {{ .Values.Mount.sistemasHavan.SecretName }}
      {{- if or (eq .Values.namespace "paladinos") (eq .Values.namespace "crm") (eq .Values.namespace "app-havan") }}
      - name: {{ .Values.Mount.clienteLib.MountName }}
        projected:
          sources:
          - secret:
              name: {{ .Values.Mount.superapp.SecretName }}
          - secret:
              name: {{ .Values.Mount.clienteLib.SecretName }}
      {{- end }}
      {{- if (eq .Values.namespace "crm")}}
          - secret:
              name: {{ .Values.Mount.crm.SecretName }}
      {{- end }}
      {{- if (eq .Values.appName "app-havan-identity-server") }} 
          - secret:
              name: {{ .Values.Mount.authenticationIdentityServer.SecretName }}
      - name: {{ .Values.Mount.pfxAppHavanIdentityServer.MountName }}
        secret:
          defaultMode: 420
          secretName: {{ .Values.Mount.pfxAppHavanIdentityServer.SecretName }}
      - name: {{ .Values.Mount.pemAppHavanIdentityServer.MountName }}
        secret:
          defaultMode: 420
          secretName: {{ .Values.Mount.pemAppHavanIdentityServer.SecretName }}
      {{- end }}
      {{- if (eq .Values.appName "zabbix-monitoramento-matriz-api") }} 
      - name: endpoints
        configMap:
          defaultMode: 420
          name: zabbix-monitoring-endpoints
          optional: false
      {{- end }}
      containers:
        - name: {{ .Values.appName }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}         
          {{- with .Values.image.ports }}
          ports:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}  
          envFrom:
          - configMapRef:
              name: namespace-global-envs
          env:
          - name: DD_AGENT_HOST
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: DD_LOGS_INJECTION
            value: 'true'         
          - name: DD_RUNTIME_METRICS_ENABLED
            value: 'true'
          - name: DD_ENTITY_ID
            valueFrom:
                fieldRef:
                    fieldPath: metadata.uid      
          - name: DD_ENV
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tags.datadoghq.com/env']
          - name: DD_SERVICE
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tags.datadoghq.com/service']
          - name: DD_TRACE_HEADER_TAGS
            value: "Origem,Chamada"                
          - name: DD_VERSION
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tags.datadoghq.com/version']
          {{- if (eq .Values.appName "app-havan-identity-server") }}
          {{- end }}
          - name: APP_NAME
            value: {{ .Values.appName }}  
          {{- if (eq .Values.useEnvKeyVaulName "true") }}
          - name: KEY_VAULT_NAME
            value: {{ .Values.keyVaulName }}  
          {{- end }}
          volumeMounts:
          - name: {{ .Values.Mount.sistemasHavan.MountName }}
            mountPath: {{ .Values.Mount.sistemasHavan.MountPath }}
          - name: apmsocketpath
            mountPath: /var/run/datadog
          {{- if or (eq .Values.namespace "paladinos") (eq .Values.namespace "crm") (eq .Values.namespace "app-havan")}}
          - name: {{ .Values.Mount.clienteLib.MountName }}
            mountPath: {{ .Values.Mount.clienteLib.MountPath }}
          {{- end }}        
          {{- if (eq .Values.appName "app-havan-identity-server") }}  
          - name: {{ .Values.Mount.pfxAppHavanIdentityServer.MountName }}
            mountPath: {{ .Values.Mount.pfxAppHavanIdentityServer.MountPath }}
          - name: {{ .Values.Mount.pemAppHavanIdentityServer.MountName }}
            mountPath: {{ .Values.Mount.pemAppHavanIdentityServer.MountPath }}
            subPath: {{ .Values.Mount.pemAppHavanIdentityServer.SubPath }} 
          {{- end }}
          {{- if (eq .Values.appName "zabbix-monitoramento-matriz-api") }} 
          - name: endpoints
            mountPath: /urls/
          {{- end }}

