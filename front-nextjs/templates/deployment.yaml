apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }} 
  labels:
    app: {{ .Values.appName }} 
    deploymentconfig: {{ .Values.appName }} 
    kube_app: {{ .Values.appName }} 
    kube_deployment: {{ .Values.appName }} 
    kube_namespace: {{ .Values.namespace }}
    tags.datadoghq.com/env: {{ .Values.environment }}
    tags.datadoghq.com/service: {{ .Values.appName }}
    tags.datadoghq.com/version: {{ .Values.image.tag }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.appName }} 
      deploymentconfig: {{ .Values.appName }} 
      kube_app: {{ .Values.appName }} 
      kube_deployment: {{ .Values.appName }} 
      kube_namespace: {{ .Values.namespace }}
  template:
    metadata:
      annotations:        
        "ad.datadoghq.com/{{ .Values.appName }}.logs" : '[{"source":"csharp", "service":"{{ .Values.appName }}"}]'
        "com.datadoghq.ad.logs" : '[{"service": "{{ .Values.appName }}"}]'
      labels:
        app: {{ .Values.appName }} 
        deploymentconfig: {{ .Values.appName }} 
        kube_app: {{ .Values.appName }} 
        kube_deployment: {{ .Values.appName }} 
        kube_namespace: {{ .Values.namespace }}
        tags.datadoghq.com/env: {{ .Values.environment }}
        tags.datadoghq.com/service: {{ .Values.appName }}
        tags.datadoghq.com/version: {{ .Values.image.tag }}
    spec:    
      imagePullSecrets:
        - name: {{ .Values.image.imagePullSecret }}
      volumes:
      - hostPath:
          path: /var/run/datadog/
        name: apmsocketpath      
      #nodeSelector:
        #areafoco: {{ .Values.areaFoco }}
      containers:
        - name: {{ .Values.appName }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}         
          {{- with .Values.image.ports }}
          ports:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          envFrom:
          - configMapRef:
              name: namespace-global-envs
          env:
          - name: DD_AGENT_HOST
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: DD_LOGS_INJECTION
            value: 'true'         
          - name: DD_RUNTIME_METRICS_ENABLED
            value: 'true'
          - name: DD_ENTITY_ID
            valueFrom:
                fieldRef:
                    fieldPath: metadata.uid      
          - name: DD_ENV
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tags.datadoghq.com/env']
          - name: DD_SERVICE
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tags.datadoghq.com/service']
          - name: DD_VERSION
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tags.datadoghq.com/version']
          - name: APP_NAME
            value: {{ .Values.appName }}  
          volumeMounts:
          - name: apmsocketpath
            mountPath: /var/run/datadog    

