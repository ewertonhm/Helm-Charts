apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .Values.appName }}
  labels:
    app: {{ .Values.appName }}
    deploymentconfig: {{ .Values.appName }}
    kube_app: {{ .Values.appName }}
    kube_deployment: {{ .Values.appName }}
    kube_namespace: {{ .Values.namespace }}
spec:
  schedule: '* * * * *'
  concurrencyPolicy: {{ .Values.concurrencyPolicy }}
  failedJobsHistoryLimit: {{ .Values.failedJobsHistoryLimit }}
  startingDeadlineSeconds: {{ .Values.startingDeadlineSeconds }}
  jobTemplate:
    spec:
      activeDeadlineSeconds: {{ .Values.activeDeadlineSeconds }}
      parallelism: {{ .Values.parallelism }}
      completions: {{ .Values.completions }}
      template:
        metadata:
          annotations:
            admission.datadoghq.com/dotnet-lib.version: v2.38.0
            "ad.datadoghq.com/{{ .Values.appName }}.logs" : '[{"source":"csharp", "service":"{{ .Values.appName }}"}]'
          labels:
            app: {{ .Values.appName }}
            deploymentconfig: {{ .Values.appName }}
            kube_app: {{ .Values.appName }}
            kube_deployment: {{ .Values.appName }}
            kube_namespace: {{ .Values.namespace }}
            tags.datadoghq.com/env: {{ .Values.environment }}
            tags.datadoghq.com/service: {{ .Values.appName }}
            tags.datadoghq.com/version: {{ .Values.image.tag }}
        spec:  
          restartPolicy: OnFailure
          containers:
          - name: {{ .Values.appName }}
            image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            env:
            - name: DD_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: DD_LOGS_INJECTION
              value: 'true'
            - name: DD_LOGS_DIRECT_SUBMISSION_INTEGRATIONS
              value: Serilog  
            - name: DD_RUNTIME_METRICS_ENABLED
              value: 'true'



